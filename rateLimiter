<mxfile host="app.diagrams.net" modified="2021-10-16T01:35:25.515Z" agent="5.0 (Windows)" etag="DK03vWvI8AxPZ62uGxKH" version="15.5.4" type="github">
  <diagram id="A3uWpEtdwmIasmHrb4VR" name="Page-1">
    <mxGraphModel dx="1865" dy="536" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="ROSSxIJBasOVH09lKTu1-3" value="&lt;br&gt;&lt;br&gt;&lt;p style=&quot;margin: 0in ; font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt&quot;&gt;Rate limiter&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;ol style=&quot;direction: ltr ; unicode-bidi: embed ; margin-top: 0in ; margin-bottom: 0in ; font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt ; font-weight: normal ; font-style: normal&quot; type=&quot;1&quot;&gt;&lt;li style=&quot;margin-top: 0 ; margin-bottom: 0 ; vertical-align: middle&quot; value=&quot;1&quot;&gt;&lt;span style=&quot;font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt ; font-weight: normal ; font-style: normal ; font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt&quot;&gt;Funtional:&lt;/span&gt;&lt;/li&gt;&lt;ol style=&quot;direction: ltr ; unicode-bidi: embed ; margin-top: 0in ; margin-bottom: 0in ; font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt ; font-weight: normal ; font-style: normal&quot; type=&quot;a&quot;&gt;&lt;li style=&quot;margin-top: 0 ; margin-bottom: 0 ; vertical-align: middle&quot; value=&quot;1&quot;&gt;&lt;span style=&quot;font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt ; font-weight: normal ; font-style: normal ; font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt&quot;&gt;Hit( bucket, 1 )&lt;br&gt;      --&amp;gt; boolean&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li style=&quot;margin-top: 0 ; margin-bottom: 0 ; vertical-align: middle&quot;&gt;&lt;span style=&quot;font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt&quot;&gt;No functional:&lt;/span&gt;&lt;/li&gt;&lt;ol style=&quot;direction: ltr ; unicode-bidi: embed ; margin-top: 0in ; margin-bottom: 0in ; font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt ; font-weight: normal ; font-style: normal&quot; type=&quot;a&quot;&gt;&lt;li style=&quot;margin-top: 0 ; margin-bottom: 0 ; vertical-align: middle&quot; value=&quot;1&quot;&gt;&lt;span style=&quot;font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt ; font-weight: normal ; font-style: normal ; font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt&quot;&gt;Scale&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-top: 0 ; margin-bottom: 0 ; vertical-align: middle&quot;&gt;&lt;span style=&quot;font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt&quot;&gt;Available: high&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-top: 0 ; margin-bottom: 0 ; vertical-align: middle&quot;&gt;&lt;span style=&quot;font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt&quot;&gt;Latency: low&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-top: 0 ; margin-bottom: 0 ; vertical-align: middle&quot;&gt;&lt;span style=&quot;font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt&quot;&gt;Consistency: high&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-top: 0 ; margin-bottom: 0 ; vertical-align: middle&quot;&gt;&lt;span style=&quot;font-family: &amp;#34;calibri&amp;#34; ; font-size: 13.0pt&quot;&gt;Durability: high&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;OK, now let&#39;s get started. I&#39;ll cover below topics:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;scenario&lt;/div&gt;&lt;div&gt;data model &lt;br&gt;&lt;/div&gt;&lt;div&gt;api&lt;/div&gt;&lt;div&gt;capacity est&lt;/div&gt;&lt;div&gt;architect&lt;/div&gt;&lt;div&gt;database&lt;/div&gt;&lt;div&gt;other &lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;OK, I&#39;ll talk about scenario, OK for you? &lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;req --&amp;gt; rate limiter --&amp;gt; services.&amp;nbsp;&amp;nbsp; Now service is &lt;b&gt;distributed&lt;/b&gt;, so rate limiter need to be disributed as well. &lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="30" y="20" width="450" height="310" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="ROSSxIJBasOVH09lKTu1-4" target="ROSSxIJBasOVH09lKTu1-8">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="220" y="580" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-11" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.75;entryDx=0;entryDy=0;" edge="1" parent="1" source="ROSSxIJBasOVH09lKTu1-4" target="ROSSxIJBasOVH09lKTu1-9">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-12" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.75;entryDx=0;entryDy=0;" edge="1" parent="1" source="ROSSxIJBasOVH09lKTu1-4" target="ROSSxIJBasOVH09lKTu1-10">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-4" value="req" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="25" y="570" width="30" height="20" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-14" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="ROSSxIJBasOVH09lKTu1-8" target="ROSSxIJBasOVH09lKTu1-15">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="370" y="600" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-8" value="host 1" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" vertex="1" parent="1">
          <mxGeometry x="160" y="550" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-16" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.075;entryY=0.625;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="ROSSxIJBasOVH09lKTu1-9" target="ROSSxIJBasOVH09lKTu1-15">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-9" value="host 2" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" vertex="1" parent="1">
          <mxGeometry x="160" y="600" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-17" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.13;entryY=0.77;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="ROSSxIJBasOVH09lKTu1-10" target="ROSSxIJBasOVH09lKTu1-15">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-10" value="host 3" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" vertex="1" parent="1">
          <mxGeometry x="160" y="650" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-13" value="req1 + req2 +req3 &amp;lt; limit" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="90" y="720" width="140" height="20" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-15" value="&amp;nbsp;&amp;nbsp; Calculate total QPS" style="ellipse;shape=cloud;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" vertex="1" parent="1">
          <mxGeometry x="354" y="560" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-18" value="ok, datamodel now, is it OK ? " style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="50" y="770" width="170" height="20" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-19" value="&lt;div&gt;1. rate table : [ key : count ]&lt;/div&gt;&lt;div&gt;2. config table : [ key : limit ] , pre defined or dynamiclly updated. &lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-2.5" y="810" width="435" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-21" value="Architect" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="25" y="870" width="60" height="20" as="geometry" />
        </mxCell>
        <mxCell id="ROSSxIJBasOVH09lKTu1-22" value="&lt;div&gt;the key is communication: how can server sync w/ each other their own qps. &lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;several methods: &lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1. master - slave ï¼š&amp;nbsp; only write to 1 rate limiter, redirect to other 2.&amp;nbsp; this is not acceptable. &lt;br&gt;&lt;/div&gt;&lt;div&gt;2. every to every communicate:&amp;nbsp; feasible, but expensive. &lt;br&gt;&lt;/div&gt;&lt;div&gt;3. gossip protocol:&amp;nbsp; good. Yahoo uses it.&amp;nbsp;&amp;nbsp; pros: no single point failure; easy to scale up.&amp;nbsp; &lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;cons: slow, lgN. &lt;br&gt;&lt;/div&gt;&lt;div&gt;4. shared rate count storage:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;use redis or memcached.&amp;nbsp; colllect all qps and determine if need to be stopped or not. &lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;data struct in redis:&amp;nbsp; key :&amp;nbsp; fixed size queue, of 1 min / 1 h / 1 day&amp;nbsp; total counts of this key. &lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;every time 1 request is in, check the total counts, and do the rule, if not, deny. &lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre&quot;&gt;Another important aspect, is protocol:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre&quot;&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;if consistency is not high, using UDP:  latency &amp;gt; consistency&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre&quot;&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;if is high, using TCP&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre&quot;&gt;Also consider the effot of client to use the service&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre&quot;&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;lib ?  language fixed&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre&quot;&gt;&lt;span style=&quot;white-space: pre&quot;&gt;	&lt;/span&gt;a service ? language agnostic&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="35" y="900" width="500" height="330" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
